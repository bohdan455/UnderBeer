// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UnderBeerPolls.DataLayer;

#nullable disable

namespace UnderBeerPolls.DataLayer.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250309142403_AddMissingFields")]
    partial class AddMissingFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.Poll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.PollOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<List<string>>("Options")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("PollId")
                        .HasColumnType("uuid");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("PollOptions");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.PollOptionResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("PollOptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PollResponseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PollOptionId");

                    b.HasIndex("PollResponseId");

                    b.ToTable("PollOptionResponses");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.PollResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("PollId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("PollResponses");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.Poll", b =>
                {
                    b.HasOne("UnderBeerPolls.DataLayer.DbModels.User", "CreatedBy")
                        .WithMany("Polls")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.PollOption", b =>
                {
                    b.HasOne("UnderBeerPolls.DataLayer.DbModels.Poll", null)
                        .WithMany("Options")
                        .HasForeignKey("PollId");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.PollOptionResponse", b =>
                {
                    b.HasOne("UnderBeerPolls.DataLayer.DbModels.PollOption", "PollOption")
                        .WithMany()
                        .HasForeignKey("PollOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnderBeerPolls.DataLayer.DbModels.PollResponse", null)
                        .WithMany("PollOptionResponses")
                        .HasForeignKey("PollResponseId");

                    b.Navigation("PollOption");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.PollResponse", b =>
                {
                    b.HasOne("UnderBeerPolls.DataLayer.DbModels.Poll", "Poll")
                        .WithMany("Responses")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.Poll", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.PollResponse", b =>
                {
                    b.Navigation("PollOptionResponses");
                });

            modelBuilder.Entity("UnderBeerPolls.DataLayer.DbModels.User", b =>
                {
                    b.Navigation("Polls");
                });
#pragma warning restore 612, 618
        }
    }
}
